// ðŸ§ª ExercÃ­cio 3.1: Detectar tecla pressionada no teclado e limpar depois
// ðŸŽ¯ Objetivo:
// Usar useEffect para adicionar um eventListener no window


// Registrar a Ãºltima tecla pressionada pelo usuÃ¡rio

// Mostrar essa tecla na tela

// Remover o event listener corretamente com o return (cleanup)

// ðŸ“‹ InstruÃ§Ãµes com comentÃ¡rios no cÃ³digo:
// jsx
// Copiar
// Editar
// 1. Importe useState e useEffect
// 2. Crie um estado 'tecla' que comeÃ§a como string vazia ''
// 3. Dentro do useEffect:
//    a. Crie uma funÃ§Ã£o handleKeyDown que recebe o evento de teclado
//    b. Atualize o estado com a tecla pressionada (e.key)
//    c. Adicione a funÃ§Ã£o como ouvinte de 'keydown' no window
//    d. No return do useEffect, remova o ouvinte com removeEventListener
// 4. Adicione [] como dependÃªncia (efeito roda sÃ³ uma vez)
// 5. Mostre na tela: "Ãšltima tecla: X"

// âœ… O que deve acontecer:
// Sempre que o usuÃ¡rio apertar uma tecla do teclado, o nome da tecla aparece na tela.

// Quando o componente for desmontado, o ouvinte Ã© removido (sem erro, sem vazamento).

import { useEffect, useState } from "react"


const App = () => {
  const [key, setKey] = useState(null)

  useEffect(() => {
    function handleKeyDown(event) {
      setKey(event.key)
    }
    window.addEventListener('keydown', handleKeyDown)

    return () => {
      window.removeEventListener('keydown', handleKeyDown)
    }
  }, [])


  return (
    <div>
     <p>Ultima tecla: {key}</p>
    </div>
  )
}

export default App


