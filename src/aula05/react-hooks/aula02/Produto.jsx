import React, { useEffect } from 'react';

const Produto = () => {

  // useEffect permite executar cÃ³digo quando o componente Ã© montado, atualizado ou desmontado
  useEffect(() => {

    // FunÃ§Ã£o que serÃ¡ chamada sempre que o usuÃ¡rio rolar a pÃ¡gina
    function handleScroll(event) {
      console.log(event); // Exibe o evento de scroll no console
    }

    // ğŸŸ© Por que usamos window.addEventListener('scroll', handleScroll)?
    // Queremos executar uma funÃ§Ã£o sempre que o usuÃ¡rio rolar a pÃ¡gina.
    // window.addEventListener escuta esse tipo de evento.
    // Neste caso, quando o evento de scroll acontece, ele chama a funÃ§Ã£o handleScroll.
    window.addEventListener('scroll', handleScroll);

    // ğŸ§¹ Por que colocamos window.removeEventListener(...) no return?
    // Essa funÃ§Ã£o dentro do return do useEffect Ã© chamada de funÃ§Ã£o de limpeza (cleanup).
    // Ela Ã© executada quando o componente for removido da tela
    // ou antes do efeito ser executado de novo, se as dependÃªncias mudarem.
    // Serve para limpar qualquer efeito colateral, como event listeners, timers (setInterval, setTimeout) ou assinaturas.
    // Evita problemas como:
    // - FunÃ§Ãµes sendo chamadas mesmo depois do componente nÃ£o existir mais
    // - Vazamento de memÃ³ria no navegador
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };

  // ğŸ”„ Por que o array [] no useEffect?
  // Com o array vazio ([]), o useEffect sÃ³ roda uma vez, quando o componente aparece na tela (montagem).
  // Isso Ã© parecido com o componentDidMount das classes.
  }, []);

  // O que serÃ¡ exibido na tela
  return (
    // 200vh significa que a altura da div Ã© 200% da altura da janela, permitindo rolagem
    <div style={{ height: '200vh' }}>
      <p>Meu Produto!</p>
    </div>
  );
};

// âœ… Quando usar esse padrÃ£o?
// VocÃª vai usar esse padrÃ£o com useEffect + addEventListener sempre que:
// - Quiser ouvir eventos globais (scroll, resize, keydown, etc.)
// - Quiser montar algo que precisa ser limpo depois (WebSocket, timer, etc.)

export default Produto;
