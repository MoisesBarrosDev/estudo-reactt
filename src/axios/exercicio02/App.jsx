// ‚úÖ Exerc√≠cio 2 ‚Äì GET com Loading e Erro na Tela
// üìù Enunciado:
// Use seu hook useAxios do Exerc√≠cio 1 (ou refatore se quiser)

// Na tela, mostre:

// Carregando... enquanto a requisi√ß√£o est√° acontecendo

// Erro: [mensagem] se der erro na requisi√ß√£o

// A lista de nomes dos usu√°rios apenas se n√£o estiver carregando e n√£o tiver erro

// üéØ Objetivo:
// Garantir que o usu√°rio entenda o que est√° acontecendo no app, melhorando a UX.


import useAxios from "./useAxios"

const App = () => {
  const { error, dados, loading } = useAxios()
  if (loading) return <p>Carregando...</p>
  if (error) return <p>Erro: {error}</p>
  return (
    <div>
       {/* Leitura dev: Se os dados existem (foram carregados) e o carregamento terminou, ent√£o mostre a lista. */}
      {dados && !loading &&(
        <ul>
        {dados && dados.map((nome) => (
          <li key={nome.id}>{nome.username}</li>
        ))}
      </ul>
      )}

    </div>
  )
}

export default App
